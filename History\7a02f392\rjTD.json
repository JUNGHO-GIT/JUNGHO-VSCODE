[
	// 1.[Shift + Alt]------------------------------------------------------------------------------->

	// [cut]
	/*{
		"key": "shift+alt+a",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "shift+alt+b",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [commend]
	{
		"key": "shift+alt+c",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},

	// [cut]
	/*{
		"key": "shift+alt+d",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [exploler]
	{
		"key": "shift+alt+e",
		"command": "workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},

	// [cut]
	/*{
		"key": "shift+alt+f",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "shift+alt+g",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "shift+alt+h",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [terminal]	]
	{
		"key": "shift+alt+i",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},

	// [cut]
	/*{
		"key": "shift+alt+j",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "shift+alt+k",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "shift+alt+l",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [create new folder]
	{
		"key": "shift+alt+m",
		"command": "explorer.newFolder"
	},

	// [create new file]
	{
		"key": "shift+alt+n",
		"command": "explorer.newFile"
	},

	// [cut]
	/*{
		"key": "shift+alt+o",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [show settings]
	{
		"key": "shift+alt+p",
		"command": "workbench.action.showCommands"
	},

	// [run without debugging]
	{
		"key": "shift+alt+q",
		"command": "workbench.action.debug.run",
		"when": "debuggersAvailable && debugState != 'initializing'"
	},

	// [rename]
	{
		"key": "shift+alt+r",
		"command": "editor.action.refactor",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+r",
		"command": "java.view.package.renameFile",
		"when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
	},
	{
		"key": "shift+alt+r",
		"command": "debug.renameWatchExpression",
		"when": "watchExpressionsFocused"
	},
	{
		"key": "shift+alt+r",
		"command": "debug.setVariable",
		"when": "variablesFocused"
	},
	{
		"key": "shift+alt+r",
		"command": "remote.tunnel.label",
		"when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
	},
	{
		"key": "shift+alt+r",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "shift+alt+r",
		"command": "workbench.action.terminal.renameInstance",
		"when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
	},

	// [save All]
	{
		"key": "shift+alt+s",
		"command": "workbench.action.files.saveAll"
	},

	// [extension]
	{
		"key": "shift+alt+t",
		"command": "workbench.view.extensions",
		"when": "viewContainer.workbench.view.extensions.enabled"
	},

	// [output]
	{
		"key": "shift+alt+u",
		"command": "workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},

	// [cut]
	/*{
		"key": "shift+alt+v",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [close all]
	{
		"key": "shift+alt+w",
		"command": "workbench.action.closeAllEditors"
	},

	// [shortcut]
	{
		"key": "shift+alt+x",
		"command": "workbench.action.openGlobalKeybindings"
	},

	// [cut]
	/*{
		"key": "shift+alt+y",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [redo]
	{
		"key": "shift+alt+z",
		"command": "redo"
	},

	// [settings]
	{
		"key": "shift+alt+1",
		"command": "-workbench.action.moveEditorToFirstGroup"
	},

	// [settings json]
	{
		"key": "shift+alt+2",
		"command": "workbench.action.openSettingsJson"
	},

	// [user snippets]
	{
		"key": "shift+alt+3",
		"command": "workbench.action.openSnippets"
	},

	// [launch json]
	{
		"key": "shift+alt+4",
		"command": "workbench.action.debug.configure"
	},

	// [window fix]
	{
		"key": "shift+alt+'",
		"command": "workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},

	// [window unfix]
	{
		"key": "shift+alt+;",
		"command": "workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},

	// [suggest pre]
	{
		"key": "shift+alt+left",
		"command": "editor.action.inlineSuggest.showPrevious",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},

	// [suggest next]
	{
		"key": "shift+alt+right",
		"command": "editor.action.inlineSuggest.showNext",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},

	// [past down]
	{
		"key": "shift+alt+down",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},

	// 2.[Alt]--------------------------------------------------------------------------------------->

	// [cut]
	/*{
		"key": "alt+a",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+b",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+c",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+d",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+e",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+f",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+g",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+h",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+i",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+j",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+k",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+l",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+m",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+n",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+o",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+p",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [debug]
	{
		"key": "alt+q",
		"command": "workbench.action.debug.start",
		"when": "debuggersAvailable && debugState == 'inactive'"
	},

	// [cut]
	/*{
		"key": "alt+r",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+s",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+t",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+u",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+v",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*	{
		"key": "alt+w",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+x",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "alt+y",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [select All]
	{
		"key": "ctrl+a",
		"command": "editor.action.selectAll"
	},

	// [cut]
	/*{
		"key": "crtl+b",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/
	
	// [copy]
	{
		"key": "ctrl+c",
		"command": "editor.action.clipboardCopyAction"
	},

	// [delete]
	{
		"key": "ctrl+d",
		"command": "deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+d",
		"command": "java.view.package.moveFileToTrash",
		"when": "explorerResourceMoveableToTrash && focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
	},
	{
		"key": "ctrl+d",
		"command": "notebook.cell.delete",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+d",
		"command": "keybindings.editor.removeKeybinding",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{ "key": "ctrl+d",          
		"command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus" 
	},
  { "key": "ctrl+d",                
		"command": "deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus" 
	},

	// [find]
	{
		"key": "ctrl+f",
		"command": "actions.find",
		"when": "editorFocus || editorIsOpen"
	},

	// [cut]
	/*{
		"key": "crtl+g",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [replace]
	{
		"key": "ctrl+h",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},

	// [cut]
	/*{
		"key": "crtl+i",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+j",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+k",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+l",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+m",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+n",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+o",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+p",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+q",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+r",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [save]
	{
		"key": "crtl+s",
		"command": "workbench.action.files.save"
	},

	// [cut]
	/*{
		"key": "crtl+t",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [cut]
	/*{
		"key": "crtl+u",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [paste]
	{
		"key": "ctrl+v",
		"command": "editor.action.clipboardPasteAction"
	},

	// [close]
	{
		"key": "crtl+x",
		"command": "-editor.action.clipboardCutAction"
	},

	// [cut]
	/*{
		"key": "crtl+y",
		"command": "-revealFileInOS",
		"when": "!editorFocus"
	},*/

	// [undo]
	{
		"key": "ctrl+z",
		"command": "undo"
	},

	// [assist]
	{
		"key": "ctrl+space",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
	},

	// 4.[ETC]--------------------------------------------------------------------------------------->

	// [refresh]
	{
		"key": "f5",
		"command": "npm.refresh"
	},

	// [backspace]
	{
		"key": "backspace",
		"command": "deleteLeft",
		"when": "textInputFocus"
	},

	// [tab]
	{
		"key": "tab",
		"command": "tab",
		"when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
	},

	// [enter]
	{
		"key": "enter",
		"command": "breakpointWidget.action.acceptInput",
		"when": "breakpointWidgetVisible && inBreakpointWidget"
	},
	{
		"key": "enter",
		"command": "editor.action.extensioneditor.findNext",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
	},
	{
		"key": "enter",
		"command": "editor.action.nextMatchFindAction",
		"when": "editorFocus && findInputFocussed"
	},
	{
		"key": "enter",
		"command": "editor.action.webvieweditor.findNext",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "enter",
		"command": "repl.action.acceptInput",
		"when": "inDebugRepl && textInputFocus"
	},
	{
		"key": "enter",
		"command": "editor.action.replaceOne",
		"when": "editorFocus && findWidgetVisible && replaceInputFocussed"
	},
	{
		"key": "enter",
		"command": "acceptSelectedSuggestion",
		"when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
	},
	{
		"key": "enter",
		"command": "acceptRenameInput",
		"when": "editorFocus && renameInputVisible"
	},
	{
		"key": "enter",
		"command": "breadcrumbs.selectFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "enter",
		"command": "keybindings.editor.defineKeybinding",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "enter",
		"command": "list.select",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "enter",
		"command": "notebook.cell.edit",
		"when": "notebookCellListFocused && notebookEditable && !inputFocus"
	},
	{
		"key": "enter",
		"command": "notification.toggle",
		"when": "notificationFocus"
	},
	{
		"key": "enter",
		"command": "problems.action.open",
		"when": "problemFocus"
	},
	{
		"key": "enter",
		"command": "revealReference",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{
		"key": "enter",
		"command": "search.action.openResult",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "enter",
		"command": "settings.action.focusSettingControl",
		"when": "settingRowFocus"
	},
	{
		"key": "enter",
		"command": "settings.action.focusSettingsList",
		"when": "inSettingsEditor && settingsTocRowFocus"
	},
	{
		"key": "enter",
		"command": "workbench.action.terminal.findPrevious",
		"when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
	},
	{
		"key": "enter",
		"command": "explorer.openAndPassFocus",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "enter",
		"command": "acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},

	// [escape]
	{
		"key": "escape",
		"command": "welcome.goBack",
		"when": "inWelcome && activeEditor == 'gettingStartedPage'"
	},
	{	
		"key":	"escape escape",	
		"command":	"workbench.action.exitZenMode"
	},
	{	
		"key":	"escape",
		"command":	"closeReferenceSearch"
	},
	{	
		"key":	"escape",
		"command":	"editor.closeTestPeek"
	},
	{	
		"key":	"escape",
		"command":	"cancelSelection"
	},
	{	
		"key":	"escape",
		"command":	"removeSecondaryCursors"
	},
	{	
		"key":	"escape",
		"command":	"notebook.cell.quitEdit"
	},
	{	
		"key":	"escape",
		"command":	"closeBreakpointWidget"
	},
	{	
		"key":	"escape",
		"command":	"editor.action.cancelSelectionAnchor"
	},
	{	
		"key":	"escape",
		"command":	"editor.action.inlineSuggest.hide"
	},
	{	
		"key":	"escape",
		"command":	"editor.action.webvieweditor.hideFind"
	},
	{
		"key":	"escape",
		"command":	"editor.cancelOperation"
	},
	{	
		"key":	"escape",
		"command":	"editor.debug.action.closeExceptionWid"
	},
	{
		"key":	"escape",
		"command":	"editor.gotoNextSymbolFromResult.cance"
	},
	{
		"key":	"escape",
		"command":	"inlayHints.stopReadingLineWithHint"
	},
	{
		"key":	"escape",
		"command":	"search.action.focusQueryEditorWidget"
	},
	{
		"key":	"escape",
		"command":	"welcome.goBack"
	},
	{
		"key":	"escape",
		"command":	"workbench.action.hideComment"
	},
	{
		"key":	"escape",
		"command":	"closeFindWidget"
	},
	{
		"key":	"escape",
		"command":	"leaveEditorMessage"
	},
	{
		"key":	"escape",
		"command":	"leaveSnippet"
	},
	{
		"key":	"escape",
		"command":	"closeDirtyDiff"
	},
	{
		"key":	"escape",
		"command":	"closeMarkersNavigation"
	},
	{
		"key":	"escape",
		"command":	"notifications.hideToasts"
	},
	{
		"key":	"escape",
		"command":	"closeParameterHints"
	},
	{
		"key":	"escape",
		"command":	"hideSuggestWidget"
	},
	{
		"key":	"escape",
		"command":	"cancelLinkedEditingInput"
	},
	{
		"key":	"escape",
		"command":	"cancelRenameInput"
	},
	{
		"key":	"escape",
		"command":	"closeAccessibilityHelp"
	},
	{
		"key":	"escape",
		"command":	"closeReplaceInFilesWidget"
	},
	{
		"key":	"escape",
		"command":	"commentsClearFilterText"
	},
	{
		"key":	"escape",
		"command":	"keybindings.editor.clearSearchResults"
	},
	{
		"key":	"escape",
		"command":	"list.clear"
	},
	{
		"key":	"escape",
		"command":	"list.closeFind"
	},
	{
		"key":	"escape",
		"command":	"notebook.hideFind"
	},
	{
		"key":	"escape",
		"command":	"problems.action.clearFilterText"
	},
	{
		"key":	"escape",
		"command":	"search.action.cancel"
	},
	{
		"key":	"escape",
		"command":	"settings.action.focusLevelUp"
	},
	{
		"key":	"escape",
		"command":	"workbench.action.closeQuickOpen"
	},
	{
		"key":	"escape",
		"command":	"workbench.action.terminal.clearSelect"
	},
	{
		"key":	"escape",
		"command":	"workbench.action.terminal.hideFind"
	},
	{
		"key":	"escape",
		"command":	"workbench.action.terminal.navigationModeExit"
	},
	{
		"key":	"escape",
		"command":	"workbench.banner.focusBanner"
	},
	{
		"key":	"escape",
		"command":	"workbench.statusBar.clearFocus"
	},
	{
		"key":	"escape",
		"command":	"breadcrumbs.selectEditor"
	},
	{
		"key":	"escape",
		"command":	"editor.closeCallHierarchy"
	},
	{
		"key":	"escape",
		"command":	"editor.closeTypeHierarchy"
	},
	{
		"key":	"escape",
		"command":	"filesExplorer.cancelCut"
	},
	{
		"key":	"escape",
		"command":	"closeReferenceSearch"
	},
	{
		"key":	"escape",
		"command":	"notifications.hideList"
	},
	{
		"key":	"escape",
		"command":	"notifications.hideToasts"
	},
	{
		"key":	"escape",
		"command":	"hideCodeActionWidget"
	},
	
	
	// 5.[arrow]------------------------------------------------------------------------------------->

	//[up]
	{
		"key": "up",
		"command": "cursorUp",
		"when": "textInputFocus"
	},
	{
		"key": "up",
		"command": "notebook.focusPreviousEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
	},
	{
		"key": "up",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "up",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "up",
		"command": "history.showPrevious",
		"when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
	},
	{
		"key": "up",
		"command": "interactive.history.previous",
		"when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
	},
	{
		"key": "up",
		"command": "list.focusUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "up",
		"command": "notebook.focusPreviousEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
	},
	{
		"key": "up",
		"command": "notifications.focusPreviousToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "up",
		"command": "scm.viewPreviousCommit",
		"when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
	},
	{
		"key": "up",
		"command": "workbench.action.interactivePlayground.arrowUp",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "up",
		"command": "workbench.action.terminal.navigationModeFocusPrevious",
		"when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
	},
	{
		"key": "up",
		"command": "workbench.banner.focusPreviousAction",
		"when": "bannerFocused"
	},
	{
		"key": "up",
		"command": "workbench.statusBar.focusPrevious",
		"when": "statusBarFocused"
	},
	{
		"key": "up",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},

	//[down]
	{
		"key": "down",
		"command": "cursorDown",
		"when": "textInputFocus"
	},
	{
		"key": "down",
		"command": "notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "down",
		"command": "settings.action.focusSettingsFile",
		"when": "inSettingsSearch && !suggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "down",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "down",
		"command": "breadcrumbs.selectFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "down",
		"command": "history.showNext",
		"when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "interactive.history.next",
		"when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
	},
	{
		"key": "down",
		"command": "list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "down",
		"command": "notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
	},
	{
		"key": "down",
		"command": "notifications.focusNextToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "down",
		"command": "scm.viewNextCommit",
		"when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "settings.action.focusSettingsFromSearch",
		"when": "inSettingsSearch && !suggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "workbench.action.interactivePlayground.arrowDown",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "down",
		"command": "workbench.action.terminal.navigationModeFocusNext",
		"when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
	},
	{
		"key": "down",
		"command": "workbench.banner.focusNextAction",
		"when": "bannerFocused"
	},
	{
		"key": "down",
		"command": "workbench.statusBar.focusNext",
		"when": "statusBarFocused"
	},
	{
		"key": "down",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},

	//[left]
	{
		"key": "left",
		"command": "cursorLeft",
		"when": "textInputFocus"
	},
	{
		"key": "left",
		"command": "breadcrumbs.focusPrevious",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "left",
		"command": "list.collapse",
		"when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
	},
	{
		"key": "left",
		"command": "notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "left",
		"command": "notification.collapse",
		"when": "notificationFocus"
	},
	{
		"key": "left",
		"command": "workbench.banner.focusPreviousAction",
		"when": "bannerFocused"
	},
	{
		"key": "left",
		"command": "workbench.statusBar.focusPrevious",
		"when": "statusBarFocused"
	},
	{
		"key": "left",
		"command": "previousCompressedFolder",
		"when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
	},

	//[right]
	{
		"key": "right",
		"command": "cursorRight",
		"when": "textInputFocus"
	},
	{
		"key": "right",
		"command": "breadcrumbs.focusNext",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "right",
		"command": "list.expand",
		"when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
	},
	{
		"key": "right",
		"command": "notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "right",
		"command": "notification.expand",
		"when": "notificationFocus"
	},
	{
		"key": "right",
		"command": "workbench.banner.focusNextAction",
		"when": "bannerFocused"
	},
	{
		"key": "right",
		"command": "workbench.statusBar.focusNext",
		"when": "statusBarFocused"
	},
	{
		"key": "right",
		"command": "nextCompressedFolder",
		"when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
	},
	{
		"key": "ctrl+d",
		"command": "-editor.action.addSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "delete",
		"command": "-java.view.package.deleteFilePermanently",
		"when": "!explorerResourceMoveableToTrash && focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
	},
	{
		"key": "shift+delete",
		"command": "-deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "delete",
		"command": "-deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+delete",
		"command": "-workbench.action.terminal.sendSequence",
		"when": "terminalFocus"
	},
	{
		"key": "delete",
		"command": "-java.view.package.moveFileToTrash",
		"when": "explorerResourceMoveableToTrash && focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
	},
	{
		"key": "delete",
		"command": "-notebook.cell.delete",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "alt+delete",
		"command": "-notebook.cell.clearOutputs",
		"when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "delete",
		"command": "-deleteRight",
		"when": "textInputFocus"
	},
	{
		"key": "delete",
		"command": "-moveFileToTrash",
		"when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "delete",
		"command": "-notification.clear",
		"when": "notificationFocus"
	},
	{
		"key": "delete",
		"command": "-remote.tunnel.closeInline",
		"when": "tunnelCloseable && tunnelViewFocus"
	},
	{
		"key": "delete",
		"command": "-workbench.action.terminal.killInstance",
		"when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "delete",
		"command": "-keybindings.editor.removeKeybinding",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{
		"key": "ctrl+d",
		"command": "search.action.remove",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "delete",
		"command": "-search.action.remove",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+delete",
		"command": "-deleteWordRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+backspace",
		"command": "-deleteWordLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "shift+backspace",
		"command": "-deleteLeft",
		"when": "textInputFocus"
	},
	{
		"key": "delete",
		"command": "-debug.removeWatchExpression",
		"when": "watchExpressionsFocused && !expressionSelected"
	},
	{
		"key": "delete",
		"command": "-debug.removeBreakpoint",
		"when": "breakpointsFocused && !breakpointInputFocused"
	},
	{
		"key": "ctrl+shift+k",
		"command": "-editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+backspace",
		"command": "-search.searchEditor.action.deleteFileResults",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+shift+h",
		"command": "-workbench.action.replaceInFiles"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.action.findInFiles"
	},
	{
		"key": "ctrl+f12",
		"command": "-editor.action.goToImplementation",
		"when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+shift+z",
		"command": "-redo"
	},
	{
		"key": "ctrl+y",
		"command": "-redo"
	},
	{
		"key": "ctrl+shift+oem_period",
		"command": "-editor.action.inPlaceReplace.down",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "f3",
		"command": "-editor.action.nextMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "f4",
		"command": "-references-view.next",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "f2",
		"command": "-editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f7",
		"command": "-editor.action.wordHighlight.next",
		"when": "editorTextFocus && hasWordHighlights"
	},
	{
		"key": "f7",
		"command": "-editor.action.diffReview.next",
		"when": "isInDiffEditor"
	},
	{
		"key": "ctrl+insert",
		"command": "-editor.action.clipboardCopyAction"
	},
	{
		"key": "f2",
		"command": "-java.view.package.renameFile",
		"when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
	},
	{
		"key": "f2",
		"command": "-debug.renameWatchExpression",
		"when": "watchExpressionsFocused"
	},
	{
		"key": "f2",
		"command": "-debug.setVariable",
		"when": "variablesFocused"
	},
	{
		"key": "f2",
		"command": "-remote.tunnel.label",
		"when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
	},
	{
		"key": "f2",
		"command": "-workbench.action.terminal.renameInstance",
		"when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
	},
	{
		"key": "f2",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+f2",
		"command": "-editor.action.changeAll",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+2",
		"command": "-editor.foldLevel2",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+f2",
		"command": "-editor.action.linkedEditing",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k f2",
		"command": "-togglePeekWidgetFocus",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "f11",
		"command": "-workbench.action.debug.stepInto",
		"when": "debugState != 'inactive'"
	},
	{
		"key": "shift+f11",
		"command": "-workbench.action.debug.stepOut",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f10",
		"command": "-workbench.action.debug.stepOver",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "ctrl+f11",
		"command": "-workbench.action.debug.stepIntoTarget",
		"when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
	},
	{
		"key": "ctrl+k ctrl+1",
		"command": "-editor.foldLevel1",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "f11",
		"command": "-workbench.action.toggleFullScreen",
		"when": "!isIOS"
	},
	{
		"key": "shift+f12",
		"command": "-goToPreviousReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "f12",
		"command": "-goToNextReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "f12",
		"command": "-editor.gotoNextSymbolFromResult",
		"when": "hasSymbols"
	},
	{
		"key": "shift+f1",
		"command": "-java.welcome"
	},
	{
		"key": "f11",
		"command": "-extension.node-debug.startWithStopOnEntry",
		"when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
	},
	{
		"key": "f10",
		"command": "-extension.node-debug.startWithStopOnEntry",
		"when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
	},
	{
		"key": "ctrl+shift+f12",
		"command": "-editor.action.peekImplementation",
		"when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "shift+f10",
		"command": "-editor.action.showContextMenu",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+k f12",
		"command": "-editor.action.revealDefinitionAside",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "shift+f12",
		"command": "-editor.action.goToReferences",
		"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "shift+alt+f12",
		"command": "-references-view.findReferences",
		"when": "editorHasReferenceProvider"
	},
	{
		"key": "f12",
		"command": "-editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "alt+f12",
		"command": "-editor.action.peekDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "alt+f1",
		"command": "-editor.action.showAccessibilityHelp"
	},
	{
		"key": "f1",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "f3",
		"command": "-workbench.action.terminal.findNext",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "f3",
		"command": "-list.find",
		"when": "listFocus && listSupportsFind"
	},
	{
		"key": "f4",
		"command": "-search.action.focusNextSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "f4",
		"command": "-goToNextReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "f5",
		"command": "-workbench.action.debug.continue",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f5",
		"command": "-workbench.action.debug.start",
		"when": "debuggersAvailable && debugState == 'inactive'"
	},
	{
		"key": "f5",
		"command": "-debug.openView",
		"when": "!debuggersAvailable"
	},
	{
		"key": "f6",
		"command": "-workbench.action.debug.pause",
		"when": "debugState == 'running'"
	},
	{
		"key": "f6",
		"command": "-workbench.action.focusNextPart"
	},
	{
		"key": "f8",
		"command": "-editor.action.marker.nextInFiles",
		"when": "editorFocus"
	},
	{
		"key": "f9",
		"command": "-editor.debug.action.toggleBreakpoint",
		"when": "debuggersAvailable && editorTextFocus"
	},
	{
		"key": "ctrl+m",
		"command": "-editor.action.toggleTabFocusMode"
	},
	{
		"key": "alt+left",
		"command": "-workbench.action.navigateBack",
		"when": "canNavigateBack"
	},
	{
		"key": "ctrl+shift+oem_5",
		"command": "-editor.action.jumpToBracket",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+0",
		"command": "-editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+j",
		"command": "-editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+p",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "ctrl+h",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+k ctrl+8",
		"command": "-editor.foldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+9",
		"command": "-editor.unfoldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+oem_2",
		"command": "-editor.foldAllBlockComments",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+a",
		"command": "-editor.action.selectAll"
	},
	{
		"key": "ctrl+numpad_subtract",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "ctrl+shift+oem_minus",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "ctrl+oem_minus",
		"command": "-workbench.action.zoomOut"
	},
	{
		"key": "ctrl+shift+u",
		"command": "-workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "ctrl+shift+e",
		"command": "-workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "ctrl+oem_3",
		"command": "-workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "-workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{
		"key": "ctrl+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "ctrl+1",
		"command": "-workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+f4",
		"command": "-workbench.action.closeActiveEditor"
	},
	{
		"key": "ctrl+oem_5",
		"command": "-workbench.action.splitEditor"
	},
	{
		"key": "ctrl+k ctrl+oem_5",
		"command": "-workbench.action.splitEditorOrthogonal"
	},
	{
		"key": "ctrl+k enter",
		"command": "-workbench.action.keepEditor"
	},
	{
		"key": "ctrl+k ctrl+shift+oem_5",
		"command": "-workbench.action.splitEditorInGroup",
		"when": "activeEditorCanSplitInGroup"
	},
	{
		"key": "ctrl+alt+right",
		"command": "-workbench.action.moveEditorToNextGroup"
	},
	{
		"key": "shift+alt+9",
		"command": "-workbench.action.moveEditorToLastGroup"
	},
	{
		"key": "ctrl+alt+left",
		"command": "-workbench.action.moveEditorToPreviousGroup"
	},
	{
		"key": "ctrl+numpad_add",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+oem_plus",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+oem_plus",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+numpad0",
		"command": "-workbench.action.zoomReset"
	},
	{
		"key": "ctrl+shift+x",
		"command": "-workbench.view.extensions",
		"when": "viewContainer.workbench.view.extensions.enabled"
	},
	{
		"key": "ctrl+k z",
		"command": "-workbench.action.toggleZenMode"
	},
	{
		"key": "ctrl+c",
		"command": "-editor.action.clipboardCopyAction"
	},
	{
		"key": "shift+insert",
		"command": "-editor.action.clipboardPasteAction"
	},
	{
		"key": "shift+alt+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+oem_period",
		"command": "-editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+shift+n",
		"command": "-workbench.action.newWindow"
	},
	{
		"key": "ctrl+l",
		"command": "-expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+k ctrl+b",
		"command": "-editor.action.setSelectionAnchor",
		"when": "editorTextFocus"
	},
	{
		"key": "escape",
		"command": "-editor.action.cancelSelectionAnchor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "-editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+left",
		"command": "-editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+right",
		"command": "-editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+oem_comma",
		"command": "-editor.createFoldingRangeFromSelection",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+oem_minus",
		"command": "-editor.foldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+oem_plus",
		"command": "-editor.unfoldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "shift+alt+0",
		"command": "-workbench.action.toggleEditorGroupLayout"
	},
	{
		"key": "shift+alt+f",
		"command": "-notebook.formatCell",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+k ctrl+oem_period",
		"command": "-editor.removeManualFoldingRanges",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+3",
		"command": "-editor.foldLevel3",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+4",
		"command": "-editor.foldLevel4",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+5",
		"command": "-editor.foldLevel5",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+6",
		"command": "-editor.foldLevel6",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+7",
		"command": "-editor.foldLevel7",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.reloadWindow",
		"when": "isDevelopment"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-workbench.action.toggleDevTools",
		"when": "isDevelopment"
	},
	{
		"key": "shift+alt+o",
		"command": "-editor.action.organizeImports",
		"when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
	},
	{
		"key": "ctrl+k ctrl+t",
		"command": "-workbench.action.selectTheme"
	},
	{
		"key": "ctrl+k ctrl+s",
		"command": "-workbench.action.openGlobalKeybindings"
	},
	{
		"key": "shift+f9",
		"command": "-settings.action.showContextMenu",
		"when": "inSettingsEditor"
	},
	{
		"key": "escape",
		"command": "-settings.action.focusLevelUp",
		"when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
	},
	{
		"key": "enter",
		"command": "-editor.action.nextMatchFindAction",
		"when": "editorFocus && findInputFocussed"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "-workbench.action.keybindingsReference"
	},
	{
		"key": "escape",
		"command": "-workbench.action.hideInterfaceOverview",
		"when": "interfaceOverviewVisible"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.debug.action.showDebugHover",
		"when": "editorTextFocus && inDebugMode"
	},
	{
		"key": "ctrl+shift+f5",
		"command": "-workbench.action.debug.restart",
		"when": "inDebugMode"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.debug.nextConsole",
		"when": "inDebugRepl"
	},
	{
		"key": "ctrl+f5",
		"command": "-workbench.action.debug.run",
		"when": "debuggersAvailable && debugState != 'initializing'"
	},
	{
		"key": "shift+f5",
		"command": "-workbench.action.debug.disconnect",
		"when": "focusedSessionIsAttach && inDebugMode"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.debug.prevConsole",
		"when": "inDebugRepl"
	},
	{
		"key": "shift+f9",
		"command": "-editor.debug.action.toggleInlineBreakpoint",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+f5",
		"command": "-workbench.action.debug.stop",
		"when": "inDebugMode && !focusedSessionIsAttach"
	},
	{
		"key": "ctrl+shift+r",
		"command": "-editor.action.refactor",
		"when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+win+n",
		"command": "-welcome.showNewFileEntries"
	},
	{
		"key": "alt+r",
		"command": "-toggleSearchEditorRegex",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+oem_plus",
		"command": "-increaseSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+oem_minus",
		"command": "-decreaseSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+l",
		"command": "-toggleSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+enter",
		"command": "-search.action.openInEditor",
		"when": "hasSearchResult && searchViewletFocus"
	},
	{
		"key": "ctrl+shift+l",
		"command": "-selectAllSearchEditorMatches",
		"when": "inSearchEditor"
	},
	{
		"key": "alt+c",
		"command": "-toggleSearchEditorCaseSensitive",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+w",
		"command": "-toggleSearchEditorWholeWord",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "ctrl+shift+r",
		"command": "-rerunSearchEditorSearch",
		"when": "inSearchEditor"
	},
	{
		"key": "shift+f4",
		"command": "-search.action.focusPreviousSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "ctrl+f",
		"command": "-settings.action.search",
		"when": "inSettingsEditor"
	},
	{
		"key": "shift+f7",
		"command": "-editor.action.diffReview.prev",
		"when": "isInDiffEditor"
	},
	{
		"key": "alt+f8",
		"command": "-editor.action.marker.next",
		"when": "editorFocus"
	},
	{
		"key": "alt+f3",
		"command": "-editor.action.dirtydiff.next",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "alt+f5",
		"command": "-workbench.action.editor.nextChange",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "ctrl+f3",
		"command": "-editor.action.nextSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "alt+oem_6",
		"command": "-editor.action.inlineSuggest.showNext",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+d",
		"command": "-editor.action.moveSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "alt+f9",
		"command": "-editor.action.nextCommentThreadAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ctrl+q",
		"command": "-workbench.action.navigateToLastEditLocation"
	},
	{
		"key": "ctrl+shift+space",
		"command": "-editor.action.triggerParameterHints",
		"when": "editorHasSignatureHelpProvider && editorTextFocus"
	},
	{
		"key": "shift+alt+f",
		"command": "-editor.action.formatDocument.none",
		"when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
	},
	{
		"key": "shift+alt+f",
		"command": "-editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.view.search",
		"when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
	},
	{
		"key": "ctrl+k ctrl+shift+oem_5",
		"command": "-workbench.action.joinEditorInGroup",
		"when": "sideBySideEditorActive"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+k ctrl+pagedown",
		"command": "-workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+k ctrl+pageup",
		"command": "-workbench.action.previousEditorInGroup"
	},
	{
		"key": "ctrl+k u",
		"command": "-workbench.action.closeUnmodifiedEditors"
	},
	{
		"key": "ctrl+tab",
		"command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+9",
		"command": "-workbench.action.lastEditorInGroup"
	},
	{
		"key": "alt+0",
		"command": "-workbench.action.lastEditorInGroup"
	},
	{
		"key": "ctrl+k w",
		"command": "-workbench.action.closeEditorsInGroup"
	},
	{
		"key": "ctrl+b",
		"command": "-workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "ctrl+0",
		"command": "-workbench.action.focusSideBar"
	},
	{
		"key": "ctrl+pagedown",
		"command": "-workbench.action.nextEditor"
	},
	{
		"key": "ctrl+shift+t",
		"command": "-workbench.action.reopenClosedEditor"
	},
	{
		"key": "ctrl+shift+y",
		"command": "-workbench.debug.action.toggleRepl",
		"when": "workbench.panel.repl.view.active"
	},
	{
		"key": "ctrl+k ctrl+shift+w",
		"command": "-workbench.action.closeAllGroups"
	},
	{
		"key": "ctrl+k ctrl+w",
		"command": "-workbench.action.closeAllEditors"
	},
	{
		"key": "ctrl+k ctrl+p",
		"command": "-workbench.action.showAllEditors"
	},
	{
		"key": "ctrl+shift+m",
		"command": "-workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{
		"key": "ctrl+shift+g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active"
	},
	{
		"key": "ctrl+shift+d",
		"command": "-workbench.view.debug",
		"when": "viewContainer.workbench.view.debug.enabled"
	},
	{
		"key": "ctrl+k ctrl+down",
		"command": "-workbench.action.focusBelowGroup"
	},
	{
		"key": "ctrl+k ctrl+right",
		"command": "-workbench.action.focusRightGroup"
	},
	{
		"key": "ctrl+shift+pagedown",
		"command": "-workbench.action.moveEditorRightInGroup"
	},
	{
		"key": "ctrl+k ctrl+left",
		"command": "-workbench.action.focusLeftGroup"
	},
	{
		"key": "ctrl+shift+pageup",
		"command": "-workbench.action.moveEditorLeftInGroup"
	},
	{
		"key": "ctrl+k ctrl+up",
		"command": "-workbench.action.focusAboveGroup"
	},
	{
		"key": "shift+f6",
		"command": "-workbench.action.focusPreviousPart"
	},
	{
		"key": "ctrl+pageup",
		"command": "-workbench.action.previousEditor"
	},
	{
		"key": "alt+z",
		"command": "-editor.action.toggleWordWrap"
	},
	{
		"key": "ctrl+k down",
		"command": "-workbench.action.moveActiveEditorGroupDown"
	},
	{
		"key": "ctrl+k right",
		"command": "-workbench.action.moveActiveEditorGroupRight"
	},
	{
		"key": "ctrl+k left",
		"command": "-workbench.action.moveActiveEditorGroupLeft"
	},
	{
		"key": "ctrl+k up",
		"command": "-workbench.action.moveActiveEditorGroupUp"
	},
	{
		"key": "escape",
		"command": "-welcome.goBack",
		"when": "inWelcome && activeEditor == 'gettingStartedPage'"
	},
	{
		"key": "ctrl+z",
		"command": "-undo"
	},
	{
		"key": "shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+enter",
		"command": "-editor.action.insertLineAfter",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "escape",
		"command": "-notifications.hideList",
		"when": "notificationCenterVisible"
	}
]
